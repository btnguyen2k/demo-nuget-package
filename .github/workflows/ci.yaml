name: 'ci'

on:
  push:
    branches: [ '*' ]
  pull_request:
    types: [ opened, edited, reopened, synchronize, review_requested ]
    branches: [ '*' ]
  workflow_call:

env:
  TEMPLATE_ROOT: ./content/Dwt
  TAG_PREFIX: v

jobs:
  BuildAndTest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '8.x', '9.x' ]
    name: Build and test with dotnet ${{ matrix.dotnet }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Display dotnet version
        run: dotnet --version

  ReleaseDryRun:
    if: github.event_name == 'push'
    needs: BuildAndTest
    runs-on: ubuntu-latest
    outputs:
      RESULT: ${{ steps.release_dry_run.outputs.result }}
      VERSION: ${{ steps.release_dry_run.outputs.releaseVersion }}
      RELEASE_NOTES: ${{ steps.release_dry_run.outputs.releaseNotes }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Release (dry-run)
        id: release_dry_run
        uses: btnguyen2k/action-semrelease@v3
        with:
          dry-run: true
          auto-mode: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-major-release: false
          tag-minor-release: false
          branches: ${{ github.ref_name }}
          tag-prefix: ${{ env.TAG_PREFIX }}
          tag-only: true
      - name: Update NuGet metadata
        run: |
          RESULT='${{ steps.release_dry_run.outputs.result }}'
          VERSION='${{ steps.release_dry_run.outputs.releaseVersion }}'
          RELEASE_NOTES='${{ steps.release_dry_run.outputs.releaseNotes }}'

          echo "üïò Updating module meta..."
          echo "   - RESULT: ${RESULT}"
          echo "   - VERSION: ${VERSION}"
          echo "   - RELEASE_NOTES: ${RELEASE_NOTES}"
          echo ""

          if [ "${RESULT}" == "SUCCESS" ]; then
            echo ========== update nuget.csproj file ==========
            sed -i -E "s/<<VERSION>>/${VERSION}/" ./nuget.csproj
            sed -i -E "s/<<RELEASE-NOTES>>/${RELEASE_NOTES}/" ./nuget.csproj
            sed -i -E "s/<<RELEASE_NOTES>>/${RELEASE_NOTES}/" ./nuget.csproj
            echo "‚úÖ Done."

            cat ./nuget.csproj
          else
            echo "‚ùé SKIPPED."
          fi
